[
  {
    "type": "tool",
    "name": "http.fetch",
    "description": "Fetches a URL via HTTP GET and returns the response body as text.",
    "kind": "task",
    "version": "1.0.0",
    "registry": "default",
    "parameters": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "type": "object",
      "required": ["url"],
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to fetch."
        }
      }
    }
  },
  {
    "type": "tool",
    "name": "openai.chat_completion",
    "description": "Call OpenAI's Chat Completions API (v1/chat/completions) for LLM and function-calling tasks.",
    "kind": "task",
    "version": "1.0.0",
    "registry": "default",
    "parameters": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "type": "object",
      "required": ["model", "messages"],
      "properties": {
        "model": {
          "type": "string",
          "description": "The OpenAI model to use (e.g., gpt-4o)."
        },
        "messages": {
          "type": "array",
          "description": "Chat messages following the OpenAI spec.",
          "items": {
            "type": "object",
            "required": ["role", "content"],
            "properties": {
              "role": { "type": "string", "enum": ["system", "user", "assistant", "tool"] },
              "content": { "type": "string" },
              "name": { "type": "string" },
              "tool_call_id": { "type": "string" }
            },
            "additionalProperties": false
          }
        },
        "temperature": { "type": "number", "minimum": 0, "maximum": 2, "default": 1 },
        "stream": { "type": "boolean", "default": false }
      }
    },
    "endpoint": "https://api.openai.com/v1/chat/completions",
    "headers": {
      "Authorization": "Bearer $env:OPENAI_API_KEY"
    }
  },
  {
    "type": "tool",
    "name": "anthropic.chat_completion",
    "description": "Call Anthropic's Claude models via OpenAI-compatible API.",
    "kind": "task",
    "version": "1.0.0",
    "registry": "default",
    "parameters": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "type": "object",
      "required": ["model", "messages"],
      "properties": {
        "model": {
          "type": "string",
          "description": "Claude model name (e.g., claude-3-7-sonnet-20250219)"
        },
        "messages": {
          "type": "array",
          "description": "Chat messages following the OpenAI spec.",
          "items": {
            "type": "object",
            "required": ["role", "content"],
            "properties": {
              "role": { "type": "string", "enum": ["system", "user", "assistant", "tool"] },
              "content": { "type": "string" },
              "name": { "type": "string" },
              "tool_call_id": { "type": "string" }
            },
            "additionalProperties": false
          }
        },
        "max_tokens": {
          "type": "integer",
          "description": "Maximum number of tokens to generate.",
          "default": 1024
        },
        "temperature": { "type": "number", "minimum": 0, "maximum": 2, "default": 1 },
        "top_p": { "type": "number", "minimum": 0, "maximum": 1, "default": 1 }
      }
    },
    "endpoint": "https://api.anthropic.com/v1/messages",
    "headers": {
      "x-api-key": "$env:ANTHROPIC_API_KEY",
      "content-type": "application/json",
      "anthropic-version": "2023-06-01"
    }
  },
  {
    "type": "tool",
    "name": "google_drive.files.list",
    "description": "List files in Google Drive, with optional folder filtering and search queries",
    "kind": "task",
    "version": "1.0.0",
    "registry": "default",
    "parameters": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "q": {
          "type": "string",
          "description": "Query for searching files (e.g., 'parents in \"FOLDER_ID\"' to list files in a folder)"
        },
        "pageSize": {
          "type": "integer",
          "description": "Maximum number of files to return",
          "default": 100,
          "minimum": 1,
          "maximum": 1000
        },
        "pageToken": {
          "type": "string",
          "description": "Token for retrieving next page of results"
        },
        "orderBy": {
          "type": "string",
          "description": "Sort order (e.g., 'createdTime desc', 'modifiedTime', 'name')"
        },
        "fields": {
          "type": "string",
          "description": "Fields to include in response",
          "default": "nextPageToken,files(id,name,mimeType,parents,createdTime,modifiedTime,size,webViewLink)"
        }
      }
    },
    "endpoint": "https://www.googleapis.com/drive/v3/files",
    "method": "GET",
    "headers": {
      "Authorization": "Bearer $env:GOOGLE_ACCESS_TOKEN",
      "Content-Type": "application/json"
    }
  },
  {
    "type": "tool",
    "name": "google_sheets.values.get",
    "description": "Get values from a range in a Google Sheets spreadsheet",
    "kind": "task",
    "version": "1.0.0",
    "registry": "default",
    "parameters": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "type": "object",
      "required": ["spreadsheetId", "range"],
      "properties": {
        "spreadsheetId": {
          "type": "string",
          "description": "ID of the spreadsheet"
        },
        "range": {
          "type": "string",
          "description": "A1 notation range (e.g., 'Sheet1!A1:D10' or 'A:D')"
        },
        "majorDimension": {
          "type": "string",
          "description": "Major dimension for returned values",
          "enum": ["ROWS", "COLUMNS"],
          "default": "ROWS"
        },
        "valueRenderOption": {
          "type": "string",
          "description": "How values should be represented",
          "enum": ["FORMATTED_VALUE", "UNFORMATTED_VALUE", "FORMULA"],
          "default": "FORMATTED_VALUE"
        }
      }
    },
    "endpoint": "https://sheets.googleapis.com/v4/spreadsheets/{spreadsheetId}/values/{range}",
    "method": "GET",
    "headers": {
      "Authorization": "Bearer $env:GOOGLE_ACCESS_TOKEN",
      "Content-Type": "application/json"
    }
  },
  {
    "type": "tool",
    "name": "google_sheets.values.update",
    "description": "Update values in a range of a Google Sheets spreadsheet",
    "kind": "task",
    "version": "1.0.0",
    "registry": "default",
    "parameters": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "type": "object",
      "required": ["spreadsheetId", "range", "values"],
      "properties": {
        "spreadsheetId": {
          "type": "string",
          "description": "ID of the spreadsheet"
        },
        "range": {
          "type": "string",
          "description": "A1 notation range to update (e.g., 'Sheet1!A1:D10')"
        },
        "values": {
          "type": "array",
          "description": "2D array of values to write",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "valueInputOption": {
          "type": "string",
          "description": "How input data should be interpreted",
          "enum": ["INPUT_VALUE_OPTION_UNSPECIFIED", "RAW", "USER_ENTERED"],
          "default": "USER_ENTERED"
        }
      }
    },
    "endpoint": "https://sheets.googleapis.com/v4/spreadsheets/{spreadsheetId}/values/{range}",
    "method": "PUT",
    "headers": {
      "Authorization": "Bearer $env:GOOGLE_ACCESS_TOKEN",
      "Content-Type": "application/json"
    }
  },
  {
    "type": "tool",
    "name": "x.post",
    "description": "Post a tweet to X (Twitter) via the API v2",
    "kind": "task",
    "version": "1.0.0",
    "registry": "default",
    "parameters": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "additionalProperties": false,
      "type": "object",
      "required": ["text"],
      "properties": {
        "text": {
          "type": "string",
          "description": "The text content of the tweet",
          "maxLength": 280
        },
        "media_ids": {
          "type": "array",
          "description": "Array of media IDs to attach to the tweet",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "endpoint": "https://api.twitter.com/2/tweets",
    "method": "POST",
    "headers": {
      "Authorization": "Bearer $env:X_BEARER_TOKEN",
      "Content-Type": "application/json"
    }
  },
  {
    "type": "mcp_server",
    "name": "airtable",
    "description": "Airtable integration via MCP protocol for database operations.",
    "command": "npx",
    "args": ["-y", "airtable-mcp-server"],
    "version": "0.1.0",
    "registry": "default",
    "env": {
      "AIRTABLE_API_KEY": "$env:AIRTABLE_API_KEY"
    },
    "transport": "stdio"
  }
] 