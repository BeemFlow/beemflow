name: test_engine_integration
description: Comprehensive integration test for engine functionality
on: cli.manual

vars:
  test_items: ["alpha", "beta", "gamma", "delta"]
  base_number: 42
  test_config:
    timeout: 5
    retries: 3
    parallel_limit: 2

steps:
  # Test basic step execution and templating
  - id: basic_test
    use: core.echo
    with:
      text: "Starting integration test with {{test_items | length}} items"

  # Test parallel execution with HTTP calls
  - id: parallel_http_test
    parallel: true
    steps:
      - id: http_test_1
        use: http
        with:
          url: "https://postman-echo.com/delay/1"
          method: GET
      - id: http_test_2
        use: http
        with:
          url: "https://jsonplaceholder.typicode.com/posts/1"
          method: GET
      - id: http_test_3
        use: http
        with:
          url: "https://jsonplaceholder.typicode.com/users/1"
          method: GET

  # Test sequential execution for comparison
  - id: sequential_test
    use: core.echo
    with:
      text: "Sequential test placeholder"

  # Individual sequential steps
  - id: seq_step_1
    depends_on: [sequential_test]
    use: core.echo
    with:
      text: "Sequential step 1: {{base_number}}"
  - id: seq_step_2
    depends_on: [seq_step_1]
    use: core.echo
    with:
      text: "Sequential step 2: {{base_number * 2}}"
  - id: seq_step_3
    depends_on: [seq_step_2]
    use: core.echo
    with:
      text: "Sequential step 3: {{seq_step_1.text}}"

  # Test foreach with parallel execution
  - id: foreach_parallel_test
    depends_on: [seq_step_3]
    foreach: "{{test_items}}"
    as: "item"
    do:
      - id: "process_{{item}}"
        use: core.echo
        with:
          text: "Processing {{item}} in parallel - value: {{item | upper}}"

  # Test foreach with sequential execution
  - id: foreach_sequential_test
    depends_on: [foreach_parallel_test]
    foreach: "{{test_items}}"
    as: "item"
    do:
      - id: "seq_process_{{item}}"
        use: core.echo
        with:
          text: "Processing {{item}} sequentially - index: {{item_index}}"

  # Test nested parallel within foreach
  - id: nested_parallel_test
    depends_on: [foreach_sequential_test]
    foreach: "{{test_items}}"
    as: "item"
    do:
      - id: "nested_ops_{{item}}"
        parallel: true
        steps:
          - id: "upper_{{item}}"
            use: core.echo
            with:
              text: "{{item | upper}}"
          - id: "length_{{item}}"
            use: core.echo
            with:
              text: "{{item | length}}"
          - id: "reverse_{{item}}"
            use: core.echo
            with:
              text: "{{item | reverse}}"

  # Test complex templating and expressions
  - id: complex_templating_test
    use: core.echo
    with:
      text: |
        Complex templating test:
        - Environment user: {{ secrets.USER }}
        - Math expression: {{ base_number + 10 }}
        - String manipulation: {{"hello world" | title}}
        - Array operations: {{test_items | join(", ")}}
        - Conditional: {% if test_items | length > 3 %}Many items{% else %}Few items{% endif %}
        - Loop result: {% for item in test_items %}{{ item }}{% if not loop.last %}, {% endif %}{% endfor %}

  # Test step output referencing
  - id: output_reference_test
    use: core.echo
    with:
      text: |
        Output reference test:
        - Basic test said: {{steps.basic_test.text}}
        - Parallel HTTP results: {{steps.parallel_http_test | length}} requests completed
        - Sequential results: {{steps.sequential_test | length}} steps completed
        - Foreach parallel: {{steps.foreach_parallel_test | length}} items processed
        - Foreach sequential: {{steps.foreach_sequential_test | length}} items processed

  # Test error handling and recovery
  - id: error_handling_test
    use: core.echo
    with:
      text: |
        Error handling test:
        - Null coalescing: {{null or 'fallback'}}
        - Empty string handling: {{'' or 'not_empty'}}
        - Undefined variable: {{undefined_var or 'undefined_fallback'}}
        - Safe defaults work correctly

  # Final verification step
  - id: verification_test
    use: core.echo
    with:
      text: |
        Integration test completed successfully!
        Summary:
        - Total test items: {{test_items | length}}
        - Base number: {{base_number}}
        - Parallel HTTP tests: {{steps.parallel_http_test | length}}
        - Sequential tests: {{steps.sequential_test | length}}
        - Foreach parallel: {{steps.foreach_parallel_test | length}}
        - Foreach sequential: {{steps.foreach_sequential_test | length}}
        - Nested parallel: {{steps.nested_parallel_test | length}}
        - All templating and execution paths tested! 