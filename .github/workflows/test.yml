name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run unit tests
        run: cargo test --lib

      - name: Run integration tests
        run: make integration

      - name: Verify environment variables are set
        run: |
          echo "Checking if API keys are set..."
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "❌ OPENAI_API_KEY is not set or empty"
            echo "Secret value starts with: [EMPTY]"
            exit 1
          else
            echo "✓ OPENAI_API_KEY is set (${#OPENAI_API_KEY} chars)"
            echo "  First 10 chars: ${OPENAI_API_KEY:0:10}..."
          fi
          if [ -z "$ANTHROPIC_API_KEY" ]; then
            echo "❌ ANTHROPIC_API_KEY is not set or empty"
            echo "Secret value starts with: [EMPTY]"
            exit 1
          else
            echo "✓ ANTHROPIC_API_KEY is set (${#ANTHROPIC_API_KEY} chars)"
            echo "  First 10 chars: ${ANTHROPIC_API_KEY:0:10}..."
          fi

          # Test that the binary can read env vars
          echo ""
          echo "Testing if flow binary can read env vars..."
          export TEST_VAR="test_value_12345"
          if ./target/release/flow --version > /dev/null 2>&1; then
            echo "✓ Binary runs successfully"
          fi

      - name: Run example workflows
        run: make e2e
